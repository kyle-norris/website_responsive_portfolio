$primary-color: #444; 
$secondary-color: #eece1a;
$text-color: #fff;
$text-color-dark: black;
$show-home-image: true;
$home-image: url(../img/background.jpg);
$background-opacity: 0.9;
// Screen Sizes for Responsive Design
$screen-sm: 500px;
$screen-md: 768px;
$screen-lg-low: 769px;
$screen-lg-high: 1170px;
$screen-xl: 1171px;


@mixin easeOut() {
    transition: all 0.5s ease-out; // 1(what to transition) 2(time to transition) 3(how to transition)
}


@mixin background {
    @if $show-home-image {
        &#bg-img { //this syntax works because the mixin is called from the 'body', which has id 'bg-image'
            background: $home-image;
            background-attachment: fixed;
            background-size: cover;

            &:after { // This will be a grey overlay for our background.
                content:''; // When you use a pseudo-class, you have to add content. Putting blank text makes it so this can function as a visual overlay.
                position: absolute;
                top: 0;
                right: 0;
                width: 100%;
                height: 100%;
                background: rgba($primary-color, $background-opacity);
                z-index: -1; // Push this element back behind the text;
            }
        }
    }
}

// Media Query Mixins
@mixin mediaSm {
    @media screen and (max-width: $screen-sm) { // Applies if screen is 500px or less
        @content;
    }
}

@mixin mediaMd {
    @media screen and (max-width: $screen-md) {
        @content;
    }
}

@mixin mediaLg {
    @media screen and (min-width: $screen-lg-low) and (max-width: $screen-lg-high) {
        @content;
    }
}

@mixin mediaXl {
    @media screen and (min-width: $screen-xl) {
        @content;
    }
}